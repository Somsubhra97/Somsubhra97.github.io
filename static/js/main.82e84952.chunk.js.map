{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","alert","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","className","styles","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","key","Info","today","Date","h","getHours","m","getMinutes","s","getSeconds","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82e84952.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2fg42\",\"card\":\"Cards_card__dp1ch\",\"infected\":\"Cards_infected__F7o8N\",\"recovered\":\"Cards_recovered__3sLMZ\",\"deaths\":\"Cards_deaths__2bYpM\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    alert('ERROR');return;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    alert('ERROR');return;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    alert('Error');return;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var s = today.getSeconds();\n\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {`${new Date(lastUpdate).toDateString()} at ${h}:${m}:${s}[hh:mm:ss]`}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.Time\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n            {`${new Date(lastUpdate).toDateString()} at ${h}:${m}:${s}[hh:mm:ss]`}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n            {`${new Date(lastUpdate).toDateString()} at ${h}:${m}:${s}[hh:mm:ss]`}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {//initially when page loads,get worldwide data\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19 STATS\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1-kad\",\"image\":\"App_image__3bRwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1pHDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__16bbG\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}